/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.puntodeventa.mvc.Views;

import com.puntodeventa.global.Entity.Usuario;
import com.puntodeventa.global.Util.TagHelper;
import com.puntodeventa.global.Util.ValidacionForms;
import com.puntodeventa.global.printservice.printService;
import com.puntodeventa.global.report.viewer.printCountVenta;
import com.puntodeventa.mvc.Controller.CategoryLogic;
import com.puntodeventa.mvc.Controller.UsuarioLogic;
import com.puntodeventa.mvc.Model.Category;
import static com.puntodeventa.mvc.Views.jfrmReport.mfecha;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import org.icepdf.core.exceptions.PDFSecurityException;

/**
 *
 * @author Nato
 */
public class frmVentaByCategory extends javax.swing.JDialog {

    private DefaultTableModel model = new DefaultTableModel();
    private CategoryLogic catLogic = new CategoryLogic();
    private ValidacionForms valForm = new ValidacionForms();
    private Boolean isSELECTED, banDataCategory = null;
    private String dataCategory;
    static Usuario usuario;
    private UsuarioLogic userLogic = new UsuarioLogic();

    /**
     * Creates new form frmVentaByCategory
     */
    public frmVentaByCategory(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        usuario = getUser();
        this.setTitle(TagHelper.getTag("frmVentaByCategory.title"));
        iniData();
    }
    
    private Usuario getUser() {
        usuario = userLogic.getUserSerializable();
        return usuario;
    }
    
    private void iniData() {
        if (iniTable()) {
            fillTable();
        }
    }

    private boolean iniTable() {
        model = new DefaultTableModel() {
            Class[] types = new Class[]{
                Boolean.class, Object.class, Object.class
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        };
        model.addColumn("-");
        model.addColumn("SELECCIONE");
        model.addColumn("CVE_CATEGORY");
        this.jtblCategory.setModel(model);
        jScrollPane1.setViewportView(jtblCategory);
        jtblCategory.getColumnModel().getColumn(0).setMinWidth(20);
        jtblCategory.getColumnModel().getColumn(0).setPreferredWidth(20);
        jtblCategory.getColumnModel().getColumn(0).setMaxWidth(20);
        jtblCategory.getColumnModel().getColumn(1).setMinWidth(580);
        jtblCategory.getColumnModel().getColumn(1).setPreferredWidth(580);
        jtblCategory.getColumnModel().getColumn(1).setMaxWidth(580);
        jtblCategory.getColumnModel().getColumn(2).setMinWidth(0);
        jtblCategory.getColumnModel().getColumn(2).setPreferredWidth(0);
        jtblCategory.getColumnModel().getColumn(2).setMaxWidth(0);
        return true;
    }

    private void fillTable() {
        List<Category> listCategory;
        listCategory = catLogic.getCategory();
        for (Category c : listCategory) {
            model.addRow(new Object[]{false, c.getCategory(), c.getId_category()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnCategory = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblCategory = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jcmbFechaIni = new org.freixas.jcalendar.JCalendarCombo();
        jcmbFechaFin = new org.freixas.jcalendar.JCalendarCombo();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jpnCategory.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seleccione la categoria y fecha de venta a imprimir", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N

        jtblCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C", "CATEGORIA", "CVE_CATEGORY"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtblCategory);
        jtblCategory.getColumnModel().getColumn(0).setMinWidth(20);
        jtblCategory.getColumnModel().getColumn(0).setPreferredWidth(20);
        jtblCategory.getColumnModel().getColumn(0).setMaxWidth(20);
        jtblCategory.getColumnModel().getColumn(2).setMinWidth(0);
        jtblCategory.getColumnModel().getColumn(2).setPreferredWidth(0);
        jtblCategory.getColumnModel().getColumn(2).setMaxWidth(0);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icono-reporte1.jpg"))); // NOI18N
        jButton1.setText("Generar Reporte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnCategoryLayout = new javax.swing.GroupLayout(jpnCategory);
        jpnCategory.setLayout(jpnCategoryLayout);
        jpnCategoryLayout.setHorizontalGroup(
            jpnCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnCategoryLayout.createSequentialGroup()
                .addComponent(jcmbFechaIni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcmbFechaFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnCategoryLayout.setVerticalGroup(
            jpnCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnCategoryLayout.createSequentialGroup()
                .addGroup(jpnCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcmbFechaFin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcmbFechaIni, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String vFechaI = mfecha.getDateCombo(this.jcmbFechaIni);
            String vFechaF = mfecha.getDateCombo(this.jcmbFechaFin);
            int vDateI = Integer.parseInt(vFechaI.replace("/", ""));
            int vDateF = Integer.parseInt(vFechaF.replace("/", ""));
            dataCategory = "";

            if (vDateI <= vDateF) {
                String cve_category;
                for (int i = 0; i < this.jtblCategory.getRowCount(); i++) {
                    cve_category = this.jtblCategory.getValueAt(i, 2).toString();
                    isSELECTED = (Boolean) this.jtblCategory.getValueAt(i, 0);

                    if (isSELECTED == true) {
                        dataCategory = dataCategory + cve_category +", ";
                        banDataCategory = true;
                    }                    
                }
                dataCategory = dataCategory.substring(0, dataCategory.length()-2);
                
                if (true == banDataCategory) {
                    printCountVenta pcv = new printCountVenta();
                    //if (true == pcv.getVentaByCategory(dataCategory, vFechaI, vFechaF, usuario)) {
                    if (true == pcv.getVentaByCategory(dataCategory, vFechaI, vFechaF, usuario)) {
                        //printService.printICEPdf(TagHelper.getTag("path.ventaByCategory"), "countSale.pdf");
                        valForm.msjInfo(TagHelper.getTag("frmVentaByCategory.generate"));
                    }
                }
            } else {
                valForm.msjWarn(TagHelper.getTag("frmVentaByCategory.date"));
            }

        } catch (NumberFormatException ex) {
            System.out.println("Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.freixas.jcalendar.JCalendarCombo jcmbFechaFin;
    private org.freixas.jcalendar.JCalendarCombo jcmbFechaIni;
    private javax.swing.JPanel jpnCategory;
    private javax.swing.JTable jtblCategory;
    // End of variables declaration//GEN-END:variables
}
